Singleton
Singleton is a creational design pattern that lets you ensure that a class has only one instance,
while providing a global access point to this instance.

There are two forms of singleton design pattern
Early Instantiation: creation of instance at load time.
Lazy Instantiation: creation of instance when required.

Advantages
Saves memory because object is not created at each request.
Only single instance is reused again and again.

Usage
Singleton pattern is mostly used in multi-threaded and database applications.
It is used in logging, caching, thread pools, configuration settings etc.

Examples of Java Libraries
java.lang.Runtime#getRuntime()
java.awt.Desktop#getDesktop()
java.lang.System#getSecurityManager()
